---
import ContentSection from "~/components/content-section.astro";
import Button from "./ui/button.astro";
  
  // export interface Props {
  //   title: string;
  // }
  // const { title } = Astro.props;

---

<ContentSection title="Contact" id="contact">
  <Fragment slot="lead">
    Let's  <span class="text-primary">Create</span> Something <span class="text-primary">Special</span> Together
  </Fragment>
  
  <div class="w-full max-w-xl space-y-2">
    <div class="relative border border-default bg-offset px-6 pb-4 pt-8">

      <!-- To make this contact form work, create your free access key from https://web3forms.com/
       Then you will get all form submissions in your email inbox. -->
  <form
    action="https://api.web3forms.com/submit"
    method="POST"
    id="form"
    class="needs-validation"
    novalidate>
    <input type="hidden" name="access_key" value="679a9842-1d54-4d54-bb30-b5e1159e291e" />
    <!-- Create your free access key from https://web3forms.com/ -->
    <input type="checkbox" class="hidden" style="display:none" name="botcheck" />
    <div class="mb-5">
      <input
        type="text"
        placeholder="Name"
        required
        class="w-full bg-default px-4 py-3 text-sm border placeholder:text-offset rounded-md outline-none focus:ring-0 border-default focus:border-primary ring-secondary"
        name="name"
      />
      <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
        Please provide a name.
      </div>
    </div>
    <div class="mb-5">
      <label for="email_address" class="sr-only">Email Address</label><input
        id="email_address"
        type="email"
        placeholder="Email"
        name="email"
        required
        class="w-full bg-default px-4 py-3 text-sm border placeholder:text-offset rounded-md outline-none focus:ring-0 border-default focus:border-primary ring-secondary"
      />
      <div class="empty-feedback text-red-400 text-sm mt-1">
        Please provide your email address.
      </div>
      <div class="invalid-feedback text-red-400 text-sm mt-1">
        Please provide a valid email address.
      </div>
    </div>
    <div class="mb-3">
      <textarea
        name="message"
        required
        placeholder="Message"
        class="w-full bg-default px-4 py-3 text-sm border placeholder:text-offset rounded-md outline-none focus:ring-0 border-default focus:border-primary ring-secondary"
      ></textarea>
      <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
        Please enter your message.
      </div>
    </div>
    <Button style="primary" type="submit" size="lg" block>Send Message</Button>
    <div id="result" class="mt-3 text-center"></div>
  </form>
  </div>
  </div>
  
</ContentSection>

<style>
  .invalid-feedback,
  .empty-feedback {
    display: none;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545;
  }
</style>


<script is:inline>
  const form = document.getElementById("form");
  const result = document.getElementById("result");

  form.addEventListener("submit", function (e) {
    e.preventDefault();
    form.classList.add("was-validated");
    if (!form.checkValidity()) {
      form.querySelectorAll(":invalid")[0].focus();
      return;
    }
    const formData = new FormData(form);
    const object = Object.fromEntries(formData);
    const json = JSON.stringify(object);

    result.innerHTML = "Sending...";

    fetch("https://api.web3forms.com/submit", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
      },
      body: json,
    })
      .then(async (response) => {
        let json = await response.json();
        if (response.status == 200) {
          result.classList.add("text-green-500");
          result.innerHTML = json.message;
        } else {
          console.log(response);
          result.classList.add("text-red-500");
          result.innerHTML = json.message;
        }
      })
      .catch((error) => {
        console.log(error);
        result.innerHTML = "Something went wrong!";
      })
      .then(function () {
        form.reset();
        form.classList.remove("was-validated");
        setTimeout(() => {
          result.style.display = "none";
        }, 5000);
      });
  });
</script>